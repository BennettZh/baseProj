<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bennett.base.dao.IRoleDao" >
  <resultMap id="BaseResultMap" type="bennett.base.domain.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="available" property="available" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role, description, available
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_roles
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_roles
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="bennett.base.domain.Role" >
    insert into sys_roles (id, role, description, 
      available)
    values (#{id,jdbcType=BIGINT}, #{role,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{available,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="bennett.base.domain.Role" >
    insert into sys_roles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="available != null" >
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        #{available,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="bennett.base.domain.Role" >
    update sys_roles
    <set >
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="bennett.base.domain.Role" >
    update sys_roles
    set role = #{role,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
<!--   批量关联角色和权限 -->
  <insert id="correlationPermission">
  insert into sys_roles_permissions(role_id, permission_id) values(#{0}, #{1})
  </insert>
<!--   关联角色和权限 -->
  <insert id="correlationPermissionList">
  INSERT INTO sys_roles_permissions
        (role_id,permission_id)
        VALUES
        <foreach collection="param2" item="id" separator=",">
            (#{0}, #{id})
        </foreach> 
  </insert>
  
<!--   取消关联角色和权限 -->
  <delete id="uncorrelationPermission">
  delete from sys_roles_permissions where role_id = #{0} and permission_id = #{1}
  </delete>
<!--   取消角色的全部权限 -->
  <delete id="uncorrelationAllPermission">
  delete from sys_roles_permissions where role_id = #{0} 
  </delete>
  <!--   批量取消关联角色和权限 -->
	<delete id="uncorrelationPermissionList">
		delete from sys_roles_permissions where role_id = #{0}
		<if test="param2 != null and param2.size>0">
			and permission_id in
			<foreach item="item" index="id" collection="param2" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="param2==null or param2.size==0">and 1=0</if>
	</delete>
	
	<!-- 向角色中添加用户 -->
	<insert id="addUserToRole">
		insert into sys_users_roles(role_id, user_id) values(#{0}, #{1})
	</insert>
	
	<!-- 向角色中添加多个用户 -->
	<insert id="addUserListToRole">
		INSERT INTO sys_users_roles
		(role_id,user_id)
		VALUES
		<foreach collection="param2" item="id" separator=",">
			(#{0}, #{id})
		</foreach>
	</insert>
	<!-- 从角色中移除用户 -->
	<delete id="removeUserFromRole">
		delete from sys_users_roles where role_id = #{0} and user_id = #{1}
	</delete>
	<!-- 从角色中移除多个用户 -->
	<delete id="removeUserListFromeRole">
		delete from sys_users_roles where role_id = #{0}
		<if test="param2 != null and param2.size>0">
			and user_id in
			<foreach item="item" index="id" collection="param2" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="param2==null or param2.size==0">and 1=0</if>
	</delete>
	<!-- 删除角色中的所有用户 -->
	<delete id="removeAllUserFromRole">
		delete from sys_users_roles where role_id = #{0}
	</delete>
	
</mapper>