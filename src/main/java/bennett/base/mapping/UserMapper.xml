<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bennett.base.dao.IUserDao" >
  <resultMap id="BaseResultMap" type="bennett.base.domain.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="locked" property="locked" jdbcType="BIT" />
    <result column="fullname" property="fullname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, salt, locked, org_id, fullname
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="bennett.base.domain.User" >
    insert into sys_users (id, username, password, 
      salt, locked, org_id, fullname)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{locked,jdbcType=BIT}), #{orgId,jdbcType=BIGINT}, #{fullname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="bennett.base.domain.User" >
    insert into sys_users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="locked != null" >
        locked,
      </if>
      <if test="orgId != null" >
        orgId,
      </if>
      <if test="fullname != null" >
        fullname
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=BIT},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="fullname != null" >
        #{fullname,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="bennett.base.domain.User" >
    update sys_users
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=BIT},
      </if>
      <if test="org_id != null" >
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="fullname != null" >
        fullname = #{fullname,jdbcType=BIGINT}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="bennett.base.domain.User" >
    update sys_users
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=BIT},
      org_id = #{orgId,jdbcType=BIGINT},
      fullname = #{fullname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findRoles"  resultType="string">
	select r.role as role from sys_users u  
	left join sys_users_roles ur on u.id = ur.user_id
	left join sys_roles r on ur.role_id = r.id
	where u.username = #{0}
	and u.locked = 0 and r.available = 1
  </select>
  <select id="findPermissions" resultType="string">
	select p.permission from sys_users u 
	left join sys_users_roles ur on u.id = ur.user_id
	left join sys_roles r on ur.role_id = r.id
	left join sys_roles_permissions rp on ur.role_id = rp.role_id
	left join sys_permissions p on rp.permission_id = p.id
	where u.username = #{0}
	and u.locked = 0 and r.available = 1 and p.available = 1
  </select>
  <select id="findByUsername" resultType="bennett.base.domain.User">
  select <include refid="Base_Column_List" /> from sys_users where username = #{0}
  </select>
</mapper>